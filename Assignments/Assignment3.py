'''
Created on Apr 20, 2018
@author: Samantha Hangsan
Assignment: 3
SPECS: 
Preliminary data mining of the prices of Apple stock. 
- Calculate the monthly average prices of Apple stock from 1984 to 2013.  
    - file of Apple's daily stock's prices will be given to you named table.csv. 
    - open the file by notepad or similar text editor, and it is comma delimited. If you open it with Excel, it shows you the data in a spreadsheet.
'''
import csv

def getInputDescriptor(): 
    # Repeatedly prompt for the name of an input file until the user enters filename and the file can be opened for input. 
    user_input = input('Enter the name of your desired input file: ')
    while(user_input != 'table.csv'):
        user_input = input('Error! Please enter the name of a valid input file: ')

    # Return a file descriptor attached to the opened file.
    infile = open(user_input)
    return infile

def getDataList(file_object, column_number):
    # Read the file of Apple's data. 
    
    # get Dates
    reader = csv.reader(file_object)
    next(reader, None) # skip headers
    dates = []
    extracted = []
    for row in reader: 
       dates.append(row[0])
    
    file_object.seek(0,0)
    next(reader, None) # skip headers
    for row in reader: 
       extracted.append(float(row[column_number]))
    
    # Return a list that consists of tuples. Each tuple is of the form: (date, column_data). 
        # For example: ('2013-02-08', 474.98) if we were collecting  data from column 6.
    zipped_list = list(zip(dates, extracted))
    tuples_list = zipped_list[:]
    return tuples_list

def averageData(list_of_tuples): 
     # In this function, take in an argument that is the list of tuples generated by getDataList above.
     print(list_of_tuples)

    # Average the data for each month, and regenerate a list of tuples. A tuple here will have the form: (data_avg, date). For example: (2972945.4545454546, '07:1985') . Note the date does not contain a day any more.

def outputAverage(filename, average): 
    pass
    # Take in an argument that is the list of tuples generated by averageData above. 
    # Output the date and average data in the tuple to a file. 
    # The file name follows the naming convention ‘data_x.txt where ‘x’ is the column number. 
    # For example, the average data for column 1 will be data_1.txt. For your refernce, these files are attached to the assignment. 
    # Compare the output of your program with the attached files.

def main():
# call getInputDescriptor to get a file descriptor
    fid = getInputDescriptor()
# iterate through columns 1-6 to average
    for column in range (1, 2):
        # call the getDataList function
        data_extracted = getDataList(fid, column)
        # call the averageData function
        averageData(data_extracted)
        # call the OutputAverage
# close input file
    fid.close()
    
if __name__ == '__main__':
    main()